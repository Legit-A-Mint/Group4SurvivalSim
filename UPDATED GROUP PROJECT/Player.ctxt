#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ @lumilk\r\n\ @andrew\r\n\ @1.0.0\r\n
comment1.params=playerModel\ speedMulti\ maxHp\ coins
comment1.target=Player(java.lang.String,\ double,\ int,\ int)
comment10.params=min\ max
comment10.target=boolean\ findClosestEnemy(int,\ int)
comment11.params=min\ max
comment11.target=boolean\ isThereACloseEnemy(int,\ int)
comment12.params=
comment12.target=void\ lookForCoins()
comment13.params=type
comment13.target=void\ spawnProjectile(int)
comment13.text=\r\n\ \ \ \ public\ boolean\ checkForWall(){\r\n\ \ \ \ double\ nextX\ \=\ getPreciseX()\ +\ (double)\ Math.round(Math.cos(Math.toRadians(getRotation())))\ *\ speed*2.1;\r\n\ \ \ \ double\ nextY\ \=\ getPreciseY()\ +\ (double)\ Math.round(Math.sin(Math.toRadians(getRotation())))\ *\ speed*2.1;\r\n\r\n\ \ \ \ tempBox\ \=\ new\ PlayerHitbox(playerImage[0].getWidth()\ -\ 24,\ (int)(playerImage[0].getHeight()\ /1.9),\ (int)\ nextX,\ (int)\ nextY,\ this,\ 2.5,\ false);\r\n\r\n\ \ \ \ //\ System.out.println(nextX);\r\n\ \ \ \ //\ System.out.println(nextY);\r\n\r\n\ \ \ \ getWorld().addObject(tempBox,\ \ (int)(nextX),\ (int)(nextY));\r\n\r\n\ \ \ \ //\ System.out.println(tempBox.getX());\r\n\ \ \ \ //\ System.out.println(tempBox.getY());\r\n\r\n\ \ \ \ Actor\ wall\ \=\ (Actor)\ findClosestTarget(CollisionHitbox.class,\ 0,\ 400,\ 750);\r\n\r\n\ \ \ \ //System.out.println(tempBox.checkIntersection(wall));\r\n\ \ \ \ if(wall\ \!\=\ null\ &&\ tempBox.checkIntersection(wall)){\r\n\ \ \ \ getWorld().removeObject(tempBox);\r\n\ \ \ \ return\ true;\r\n\ \ \ \ }\r\n\ \ \ \ getWorld().removeObject(tempBox);\r\n\ \ \ \ return\ false;\r\n\ \ \ \ }\r\n
comment14.params=
comment14.target=void\ collectCoins()
comment15.params=
comment15.target=void\ checkEffects()
comment16.params=num
comment16.target=void\ setRaft(int)
comment17.params=
comment17.target=void\ handleMovement()
comment18.params=dx\ dy
comment18.target=void\ handleCollision(double,\ double)
comment19.params=direction
comment19.target=void\ handleRepel(java.lang.String)
comment2.params=
comment2.target=void\ createHitbox()
comment2.text=try\ to\ make\ this\ added\ to\ world,\ if\ doesnt\ work\ keep\ it\ as\ is
comment20.params=
comment20.target=double\ getSpeed()
comment21.params=
comment21.target=int\ getHP()
comment22.params=
comment22.target=void\ updateHitboxPosition()
comment23.params=
comment23.target=void\ resetHitboxPosition()
comment24.params=
comment24.target=Hitbox\ getHitbox()
comment25.params=
comment25.target=boolean\ isCollidingWithHitbox()
comment26.params=damage
comment26.target=void\ damageMe(int)
comment27.params=damage\ ticks
comment27.target=void\ poisonMe(int,\ int)
comment28.params=
comment28.target=int\ getHp()
comment29.params=
comment29.target=int\ getMaxHp()
comment3.params=
comment3.target=void\ createFov3()
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ \ \ \ private\ void\ createFov()\ {\r\n\ \ \ \ fov\ \=\ new\ Fov(playerImage[0].getWidth()*6\ \ ,\ (int)\ (((double)playerImage[0].getHeight())*4.5),\ 0,\ 0,\ this,\ 2.5,\ 3.745,\ 3.69,\ 1.3,\ 3);\r\n\ \ \ \ getWorld().addObject(fov,\ getX()\ +\ 55,\ getY()\ +\ 55);\r\n\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ void\ createFov2()\ {\r\n\ \ \ \ fov2\ \=\ new\ Fov(playerImage[0].getWidth()*6\ \ ,\ (int)\ (((double)playerImage[0].getHeight())*4.5),\ 0,\ 0,\ this,\ 2.5,\ 1.2,\ 1.2,\ 0.2\ ,\ 0.5);\r\n\ \ \ \ getWorld().addObject(fov2,\ getX()\ +\ 55,\ getY()\ +\ 55);\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ void\ createFov4()\ {\r\n\ \ \ \ fov4\ \=\ new\ Fov(playerImage[0].getWidth()*6\ \ ,\ (int)\ (((double)playerImage[0].getHeight())*4.5),\ 0,\ 0,\ this,\ 2.5,\ 0.3,\ 0.3,\ 0.03,\ 0.03,\ 90);\r\n\ \ \ \ getWorld().addObject(fov4,\ getX()\ +\ 55,\ getY()\ +\ 55);\r\n\ \ \ \ }\ \r\n\r\n\ \ \ \ private\ void\ createFov5()\ {\r\n\ \ \ \ fov5\ \=\ new\ Fov(playerImage[0].getWidth()*6\ \ ,\ (int)\ (((double)playerImage[0].getHeight())*4.5),\ 0,\ 0,\ this,\ 2.5,\ 0.3,\ 0.3,\ 0.03,\ 0.03,\ -90);\r\n\ \ \ \ getWorld().addObject(fov5,\ getX()\ +\ 55,\ getY()\ +\ 55);\r\n\ \ \ \ }\ \ \r\n
comment5.params=
comment5.target=void\ handleCooldowns()
comment6.params=
comment6.target=void\ setCollisionRotation()
comment7.params=
comment7.target=void\ determineWhatToBuy()
comment8.params=
comment8.target=void\ resetRota()
comment9.params=
comment9.target=void\ buyHealthPotion()
numComments=30
