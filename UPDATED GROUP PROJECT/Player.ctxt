#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ @lumilk\r\n\ @1.0.0\r\n
comment1.params=playerModel\ choosenSpeed\ lives
comment1.target=Player(java.lang.String,\ int,\ Lives)
comment10.params=type
comment10.target=void\ spawnProjectile(int)
comment11.params=
comment11.target=void\ collectCoins()
comment12.params=
comment12.target=void\ checkEffects()
comment13.params=num
comment13.target=void\ setRaft(int)
comment14.params=
comment14.target=Hitbox\ getHitbox()
comment14.text=\r\n\ \ \ \ private\ void\ handleMovement()\ {\r\n\ \ \ \ \ \ \ \ dx\ \=\ 0;\r\n\ \ \ \ \ \ \ \ dy\ \=\ 0;\r\n\r\n\ \ \ \ \ \ \ \ //\ Input-based\ movement\ (for\ manual\ control)\r\n\ \ \ \ \ \ \ \ if\ (Greenfoot.isKeyDown("a"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ dx\ -\=\ speed;\r\n\ \ \ \ \ \ \ \ \ \ \ \ direction\ \=\ 3;\ //\ Left\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ if\ (Greenfoot.isKeyDown("d"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ dx\ +\=\ speed;\r\n\ \ \ \ \ \ \ \ \ \ \ \ direction\ \=\ 1;\ //\ Right\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ if\ (Greenfoot.isKeyDown("w"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ dy\ -\=\ speed;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ if\ (Greenfoot.isKeyDown("s"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ dy\ +\=\ speed;\r\n\ \ \ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ \ \ handleCollision(dx,\ dy);\r\n\ \ \ \ }\r\n\r\n\ \ \ \ //\ Handle\ movement\ with\ collision\ detection\r\n\ \ \ \ private\ void\ handleCollision(double\ dx,\ double\ dy)\ {\r\n\ \ \ \ \ \ \ \ double\ futureX\ \=\ getX()\ +\ dx;\r\n\ \ \ \ \ \ \ \ double\ futureY\ \=\ getY()\ +\ dy;\r\n\r\n\ \ \ \ \ \ \ \ //\ Handle\ horizontal\ movement\r\n\ \ \ \ \ \ \ \ hitbox.setLocation(futureX,\ getY());\r\n\ \ \ \ \ \ \ \ if\ (\!isCollidingWithHitbox())\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ setLocation(futureX,\ getY());\r\n\ \ \ \ \ \ \ \ \ \ \ \ collisionCounter\ \=\ 0;\ //\ Reset\ collision\ counter\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ resetHitboxPosition();\r\n\ \ \ \ \ \ \ \ \ \ \ \ handleRepel("horizontal");\r\n\ \ \ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ \ \ //\ Handle\ vertical\ movement\r\n\ \ \ \ \ \ \ \ hitbox.setLocation(getX(),\ futureY);\r\n\ \ \ \ \ \ \ \ if\ (\!isCollidingWithHitbox())\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ setLocation(getX(),\ futureY);\r\n\ \ \ \ \ \ \ \ \ \ \ \ collisionCounter\ \=\ 0;\ //\ Reset\ collision\ counter\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ resetHitboxPosition();\r\n\ \ \ \ \ \ \ \ \ \ \ \ handleRepel("vertical");\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ //\ Repel\ the\ player\ upon\ collision\r\n\ \ \ \ private\ void\ handleRepel(String\ direction)\ {\r\n\ \ \ \ \ \ \ \ collisionCounter++;\r\n\ \ \ \ \ \ \ \ if\ (collisionCounter\ >\=\ MAX_COLLISION_ATTEMPTS)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (direction.equals("horizontal"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ setLocation(getX()\ -\ dx\ *\ 2,\ getY());\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (direction.equals("vertical"))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ setLocation(getX(),\ getY()\ -\ dy\ *\ 2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ collisionCounter\ \=\ 0;\ //\ Reset\ collision\ counter\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\r\n\ \ \ \ //\ Update\ the\ hitbox\ position\ to\ align\ with\ the\ player\r\n\ \ \ \ private\ void\ updateHitboxPosition()\ {\r\n\ \ \ \ \ \ \ \ hitbox.setLocation(getX(),\ getY());\r\n\ \ \ \ }\r\n\r\n\ \ \ \ //\ Reset\ hitbox\ position\ to\ match\ the\ player\r\n\ \ \ \ private\ void\ resetHitboxPosition()\ {\r\n\ \ \ \ \ \ \ \ hitbox.setLocation(getX(),\ getY());\r\n\ \ \ \ }\r\n\r\n\ \ \ \ //\ Check\ if\ the\ hitbox\ is\ colliding\ with\ other\ objects\r\n\ \ \ \ private\ boolean\ isCollidingWithHitbox()\ {\r\n\ \ \ \ \ \ \ \ for\ (Hitbox\ other\ \:\ hitbox.getIntersectingHitboxes())\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (other\ \!\=\ hitbox\ &&\ other.checkCollision(hitbox))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ }\r\n
comment15.params=damage
comment15.target=void\ damageMe(int)
comment16.params=damage\ ticks
comment16.target=void\ poisonMe(int,\ int)
comment17.params=
comment17.target=int\ getHp()
comment18.params=
comment18.target=int\ getMaxHp()
comment2.params=
comment2.target=void\ createHitbox()
comment2.text=try\ to\ make\ this\ added\ to\ world,\ if\ doesnt\ work\ keep\ it\ as\ is
comment3.params=
comment3.target=void\ act()
comment4.params=
comment4.target=void\ handleCooldowns()
comment5.params=
comment5.target=void\ determineWhatToBuy()
comment6.params=
comment6.target=void\ buyHealthPotion()
comment7.params=
comment7.target=void\ findClosestEnemy()
comment8.params=
comment8.target=void\ lookForCoins()
comment9.params=
comment9.target=boolean\ checkForWall()
numComments=19
